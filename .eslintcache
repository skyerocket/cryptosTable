[{"/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/graphql/queries.js":"1","/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/App.js":"2","/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/index.js":"3","/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/aws-exports.js":"4","/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/reportWebVitals.js":"5"},{"size":694,"mtime":1611030970885,"results":"6","hashOfConfig":"7"},{"size":2876,"mtime":1611055004423,"results":"8","hashOfConfig":"7"},{"size":455,"mtime":1611031137683,"results":"9","hashOfConfig":"7"},{"size":722,"mtime":1611030809835,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1610941564750,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xv155g",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/graphql/queries.js",[],"/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/App.js",["23","24","25"],"import { listCryptos } from './graphql/queries';\nimport './App.css';\nimport Amplify,  { API, graphqlOperation } from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { AmplifySignOut, withAuthenticator } from '@aws-amplify/ui-react';\nimport React, { useState, useEffect } from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport _ from 'lodash';\n\nAmplify.configure(awsconfig);\n\nfunction App() {\n  const [cryptos, setCryptos] = useState([]);\n\n  useEffect(() => {\n    fetchCryptos();\n}, []);\n\n  const fetchCryptos = async () => {\n    try {\n        const data = await API.graphql(graphqlOperation(listCryptos, {\"limit\": 5000}));\n        const list = data.data.listCryptos.items;\n        console.log('list', list);\n        const results = dealWithData(list);\n        console.log('results', results);\n        setCryptos(results);\n    } catch (error) {\n        console.log('error on fetching data', error);\n    }\n  };\n\n  const dealWithData = data => {\n    const results = [];\n    const groupby = _.groupBy(data, row => {\n      return row.currency;\n    });\n    for (let currency in groupby) {\n      const sortby = groupby[currency].sort((a,b) => {\n        let dateA = new Date(a.date);\n        let dateB = new Date(b.date);\n        return dateB - dateA\n      })\n      let latest = sortby[0];\n      let diff24 = sortby[1];\n      let diff7 = sortby[6];\n      const result = {\n        \"currency\": latest.currency,\n        \"price\": latest.close,\n        \"diff24\": `${((latest.close - diff24.close)/latest.close * 100).toFixed(1)}%`,\n        \"diff7\": `${((latest.close - diff7.close)/latest.close * 100).toFixed(1)}%`,\n        \"diffV\": `${parseInt(latest.volume - diff24.volume).toLocaleString()}`,\n        \"marketCap\": parseInt(latest.marketCap).toLocaleString()\n      }\n      results.push(result)\n    }\n    return results\n  }\n\n  const columns = [\n    {\n     name: \"currency\",\n     label: \"Currency\",\n     options: {\n      filter: false,\n      sort: true,\n     }\n    },\n    {\n     name: \"price\",\n     label: \"Price\",\n     options: {\n      filter: false,\n      sort: false,\n     }\n    },\n    {\n     name: \"diff24\",\n     label: \"24h\",\n     options: {\n      filter: false,\n      sort: true,\n     },\n    },\n    {\n      name: \"diff7\",\n      label: \"7d\",\n      options: {\n       filter: false,\n       sort: true,\n      },\n     },\n     {\n      name: \"diffV\",\n      label: \"24h Volume\",\n      options: {\n       filter: false,\n       sort: true,\n      },\n     },\n     {\n      name: \"marketCap\",\n      label: \"Mkt Cap\",\n      options: {\n       filter: false,\n       sort: true,\n      },\n     },\n   ];\n     \n   const options = {\n     filterType: 'checkbox',\n   };\n   \n\n  return (\n    <div className=\"App\">\n      <MUIDataTable\n        title={\"Crypto Data\"}\n        data={cryptos}\n        columns={columns}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/index.js",[],"/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/aws-exports.js",[],"/Users/feiyang/projects/amplifyFullStack/amplify-react-app/src/reportWebVitals.js",[],{"ruleId":"26","severity":1,"message":"27","line":5,"column":10,"nodeType":"28","messageId":"29","endLine":5,"endColumn":24},{"ruleId":"26","severity":1,"message":"30","line":5,"column":26,"nodeType":"28","messageId":"29","endLine":5,"endColumn":43},{"ruleId":"31","severity":1,"message":"32","line":17,"column":4,"nodeType":"33","endLine":17,"endColumn":6,"suggestions":"34"},"no-unused-vars","'AmplifySignOut' is defined but never used.","Identifier","unusedVar","'withAuthenticator' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCryptos'. Either include it or remove the dependency array.","ArrayExpression",["35"],{"desc":"36","fix":"37"},"Update the dependencies array to be: [fetchCryptos]",{"range":"38","text":"39"},[504,506],"[fetchCryptos]"]